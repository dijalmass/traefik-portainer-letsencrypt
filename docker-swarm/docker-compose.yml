services:
  traefik:
    image: traefik:latest
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
    command: 
      - --providers.swarm.endpoint=tcp://127.0.0.1:2377
      - --certificatesresolvers.myresolver.acme.email=${EMAIL_ADDRESS}
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.service=traefik@docker
      - traefik.http.routers.traefik.tls.certresolver=myresolver
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik.yml:/etc/traefik/traefik.yml
      - traefik_letsencrypt:/etc/letsencrypt
    networks:
      - traefik
  
  portainer:
    image: portainer/portainer-ce
    deploy:
      mode: global  # Rodar em todos os n√≥s do cluster Swarm
      restart_policy:
        condition: any
    command: -H tcp://tasks.agent:9001
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN_NAME}`)
      - traefik.http.routers.portainer.entrypoints=websecure
      - traefik.http.routers.portainer.tls.certresolver=myresolver
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    volumes:
      - portainer_data:/data
    networks:
      - traefik

networks:
  traefik:
    external: true

volumes:
  portainer_data:
  traefik_letsencrypt:
